#!/bin/bash
#
# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Telegram Comment Monitor –Ω–∞ Yandex Cloud
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ: bash setup.sh
#

set -e

echo "=========================================="
echo "Telegram Comment Monitor - –£—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo "=========================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –û–°
if [ ! -f /etc/os-release ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
    exit 1
fi

source /etc/os-release
if [[ "$ID" != "ubuntu" ]] && [[ "$ID" != "debian" ]]; then
    echo "‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª—Å—è –Ω–∞ Ubuntu/Debian. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n)"
    read -r response
    if [[ "$response" != "y" ]]; then
        exit 1
    fi
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update
sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.11 –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
sudo apt install -y python3.11 python3.11-venv python3-pip git

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python
if ! command -v python3.11 &> /dev/null; then
    echo "‚ùå Python 3.11 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

echo "‚úÖ Python $(python3.11 --version) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
# –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏–∑ deploy/, –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [[ "$SCRIPT_DIR" == */deploy ]]; then
    PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
    echo "‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏–∑ deploy/, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"
else
    PROJECT_DIR="$SCRIPT_DIR"
    echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "$PROJECT_DIR/worker.py" ] || [ ! -f "$PROJECT_DIR/requirements.txt" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã:"
    echo "  1. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: git clone <–≤–∞—à-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π>"
    echo "  2. –ü–µ—Ä–µ—à–ª–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞: cd monitorshik-latest"
    echo "  3. –ó–∞–ø—É—Å—Ç–∏–ª–∏ —Å–∫—Ä–∏–ø—Ç: bash deploy/setup.sh"
    exit 1
fi

cd "$PROJECT_DIR"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üêç –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
python3.11 -m venv venv

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env
if [ ! -f "$PROJECT_DIR/.env" ]; then
    echo ""
    echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    echo "–°–µ–π—á–∞—Å –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è."
    echo ""
    echo "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Å–º. env.example –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–Ω–∞—á–µ–Ω–∏–π"
    echo ""
    
    read -p "TG_API_ID: " TG_API_ID
    read -p "TG_API_HASH: " TG_API_HASH
    read -p "TG_STRING_SESSION: " TG_STRING_SESSION
    read -p "BOT_TOKEN: " BOT_TOKEN
    
    echo ""
    echo "üìå ALERT_CHAT_ID - ID –≥—Ä—É–ø–ø—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    echo "   –§–æ—Ä–º–∞—Ç: -100XXXXXXXXXX (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º -100)"
    echo "   –ü–æ–ª—É—á–∏—Ç—å: –¥–æ–±–∞–≤—å—Ç–µ @userinfobot –≤ –≤–∞—à—É –≥—Ä—É–ø–ø—É"
    read -p "ALERT_CHAT_ID: " ALERT_CHAT_ID
    
    read -p "CHANNELS (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ë–ï–ó @, –Ω–∞–ø—Ä–∏–º–µ—Ä: durov,telegram): " CHANNELS
    read -p "TZ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: Europe/Moscow): " TZ
    TZ=${TZ:-Europe/Moscow}
    
    cat > "$PROJECT_DIR/.env" << EOF
TG_API_ID=$TG_API_ID
TG_API_HASH=$TG_API_HASH
TG_STRING_SESSION=$TG_STRING_SESSION
BOT_TOKEN=$BOT_TOKEN
ALERT_CHAT_ID=$ALERT_CHAT_ID
CHANNELS=$CHANNELS
TZ=$TZ
EOF
    
    chmod 600 "$PROJECT_DIR/.env"
    echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ systemd service
echo ""
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ systemd service..."

sudo tee /etc/systemd/system/telegram-monitor.service > /dev/null << EOF
[Unit]
Description=Telegram Comment Monitor
After=network.target

[Service]
Type=simple
User=$USER
WorkingDirectory=$PROJECT_DIR
EnvironmentFile=$PROJECT_DIR/.env
ExecStart=$PROJECT_DIR/venv/bin/python $PROJECT_DIR/worker.py
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd
sudo systemctl daemon-reload

# –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
sudo systemctl enable telegram-monitor

echo ""
echo "=========================================="
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "=========================================="
echo ""
echo "üöÄ –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–º:"
echo ""
echo "  –ó–∞–ø—É—Å–∫:       sudo systemctl start telegram-monitor"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:    sudo systemctl stop telegram-monitor"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:   sudo systemctl restart telegram-monitor"
echo "  –°—Ç–∞—Ç—É—Å:       sudo systemctl status telegram-monitor"
echo "  –õ–æ–≥–∏:         sudo journalctl -u telegram-monitor -f"
echo ""
echo "üìù –•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å —Å–µ–π—á–∞—Å? (y/n)"
read -r response

if [[ "$response" == "y" ]]; then
    sudo systemctl start telegram-monitor
    sleep 2
    sudo systemctl status telegram-monitor --no-pager
    echo ""
    echo "‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "   sudo journalctl -u telegram-monitor -f"
fi

echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ!"

